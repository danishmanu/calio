<%- include('../partials/admin-header.ejs') %>
<%- include('../partials/admin-sidebar.ejs') %>
<div class="main-panel">
    <div class="content-wrapper">
        <div class="product-form-container">
            <h2 class="form-title">Product Information</h2>
            <form action="/admin/products/addProduct" method="post" enctype="multipart/form-data" onsubmit="return validProduct()">
                <div class="row mb-3">
                    <div class="col-12">
                        <label for="product_name" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="product_name" name="name" placeholder="Enter Product Name">
                        <p id="product_name-error" class="text-danger"></p>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-select p-3 w-100" name="category_Id" style="color: #666666; border: 1px solid #e4e6f6;" id="category_id" required>
                            <option selected disabled>Select Category</option>
                            <% category.forEach((cat) => { %>
                                <option value="<%= cat._id %>"><%= cat.cat_name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="brand" class="form-label">Brand</label>
                        <select class="form-select p-3 w-100" style="color: #666666; border: 1px solid #e4e6f6;" name="brand_Id" id="brand" required>
                            <option selected disabled>Select Brand</option>
                            <% brands.forEach((brand) => { %>
                                <option value="<%= brand._id %>"><%= brand.brand_name %></option>
                            <% }) %>
                        </select>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="price" class="form-label">Price</label>
                        <input type="text" class="form-control" id="price" placeholder="Enter Price" name="price">
                        <p id="price-error" class="text-danger"></p>
                    </div>
                    <div class="col-md-6">
                        <label for="stock" class="form-label">Stock</label>
                        <input type="text" class="form-control" id="stock" name="stock" placeholder="Enter Stock">
                        <p id="stock-error" class="text-danger"></p>
                    </div>
                </div>
                <div class="col-12">
                    <label for="description" class="form-label">Description</label>
                    <textarea name="description" class="form-control" id="description" rows="6" placeholder="Enter Description"></textarea>
                    <p id="description-error" class="text-danger"></p>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label>Upload Images</label>
                        <div class="form-group row">
                            <% for(let i = 1; i <= 4; i++) { %>
                                <div class="col-sm-3">
                                    <div class="image-placeholder">
                                        <img src="/public/images/upload_image.jpg" alt="placeholder" class="img-fluid" id="imagePreview<%= i %>" />
                                        <input type="file" class="form-control mt-2" name="image<%= i %>" id="image<%= i %>" onchange="previewAndCropImage(event, 'imagePreview<%= i %>', 'cropper<%= i %>', 'file-error<%= i %>')" accept="image/*" required />
                                    </div>
                                    <p id="file-error<%= i %>" class="text-danger"></p>
                                </div>
                            <% } %>
                            <div id="cropModal" style="display: none;">
                                <div class="crop-container mb-3">
                                    <img id="cropImage" style="max-width: 100%;" />
                                    <button type="button" class="btn btn-primary" onclick="cropAndSaveImage()">Crop & Save</button>
                                    <button type="button" class="btn btn-secondary" onclick="closeCropModal()">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
let cropper;
let currentImageId;

function previewAndCropImage(event, previewId, cropperId, errorId) {
    const file = event.target.files[0];
    const allowedTypes = ['image/jpeg', 'image/png','image/webp'];
    const fileErrorElement = document.getElementById(errorId);

    fileErrorElement.textContent = '';

    if (file) {
        if (!allowedTypes.includes(file.type)) {
            fileErrorElement.textContent = 'Only JPG and PNG files are allowed!';
            event.target.value = ''; // Clear the selected file
            return;
        }
        const reader = new FileReader();
        reader.onload = function (e) {
            const imgElement = document.getElementById('cropImage');
            imgElement.src = e.target.result;
            document.getElementById('cropModal').style.display = 'block'; 

            currentImageId = previewId; 
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(imgElement, {
                aspectRatio: 8 / 8,
                viewMode: 2,
            });
        };
        reader.readAsDataURL(file);
    }
}

function cropAndSaveImage() {
    if (!cropper) return;

    const croppedCanvas = cropper.getCroppedCanvas({
        width: 400,
        height: 400,
    });

    croppedCanvas.toBlob((blob) => {
        const file = new File([blob], `cropped-${currentImageId}.jpg`, { type: 'image/jpeg' });
        const dataTransfer = new DataTransfer();
        dataTransfer.items.add(file);

        // Correct selector for file input
        const fileInput = document.querySelector(`input[name="${currentImageId.replace('imagePreview', 'image')}"]`);
        fileInput.files = dataTransfer.files;

        // Update the preview image with the cropped image
        document.getElementById(currentImageId).src = croppedCanvas.toDataURL('image/jpeg');
        document.getElementById('cropModal').style.display = 'none'; // Close modal

        cropper.destroy();
        cropper = null;
    }, 'image/jpeg');
}

function closeCropModal() {
    document.getElementById('cropModal').style.display = 'none'; // Hide the modal
    if (cropper) {
        cropper.destroy(); // Destroy the cropper instance
        cropper = null; // Reset the cropper variable
    }
}

function validProduct() {
    const product_name = document.getElementById('product_name').value;
    const priceInput = document.getElementById('price').value;
    const price = parseFloat(priceInput.replace(/,/g, ''));
    
    const stock = document.getElementById('stock').value;
    const description = document.getElementById('description').value;

    document.getElementById('product_name-error').textContent = '';
    document.getElementById('description-error').textContent = '';
    document.getElementById('price-error').textContent = '';
    document.getElementById('stock-error').textContent = '';

    if (!product_name || product_name.trim().length === 0) {
        document.getElementById('product_name-error').textContent = 'Product Name field should not be empty!';
        return false;
    } else if (!priceInput || priceInput.trim().length === 0) {
        document.getElementById('price-error').textContent = 'Price field should not be empty!';
        return false;
    } else if (isNaN(price) || price <= 0) {
        document.getElementById('price-error').textContent = 'Price should be a positive number!';
        return false;
    } else if (!stock || stock.trim().length === 0) {
        document.getElementById('stock-error').textContent = 'Stock field should not be empty!';
        return false;
    } else if (isNaN(Number(stock)) || Number(stock) < 0) {
        document.getElementById('stock-error').textContent = 'Stock should be greater than or equal to zero!';
        return false;
    } else if (!description || description.trim().length === 0) {
        document.getElementById('description-error').textContent = 'This field should not be empty!';
        return false;
    }

    return true;
}
</script>
