<%- include('../partials/admin-header.ejs') %>
<%- include('../partials/admin-sidebar.ejs') %>
<style>
  .fw-bolder{
    color: black;
    font-weight: bolder;
  }
</style>
<div class="main-panel">
  <div class="content-wrapper">
      <div class="row">

        <section class="h-100 gradient-custom">
            <div class="container  h-100">
              <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-lg-10 col-xl-10">
                  <div class="card" style="border-radius: 10px;">
                    <div class="card-header  px-4 py-5">
                      <div class="row">
                        <div class="col-6"><h5 class="text-muted mb-0">Ordered By <span style="color: #29b2f1;"><%= order.user_Id.username %></span>!</h5>
                        </div>
                        
                      </div>
                      
                      
                    
                    </div>
                    <div class="card-body p-4">
                      <div class="d-flex justify-content-between align-items-center mb-4">
                        <p class="lead fw-normal mb-0" style="color: #a8729a;">Order_Id:<%= order.orderId? order.orderId:order._id  %></p>
                       
                      </div>
                      <div class="card shadow-0 border mb-4">
                        <div class="card-body">
                          <div class="">
                            <h5>Shipping Address</h5>
                            <br>
                            <p><span class="fw-bolder">Mobile No:</span><%=order.deliveryAddress.phone%></p>
                             <p><span class="fw-bolder">Address line:</span><%=order.deliveryAddress.address_line%></p>
                             <p><span class="fw-bolder">city:</span><%=order.deliveryAddress.city%></p>
                             <p><span class="fw-bolder">state:</span><%=order.deliveryAddress.state%></p>
                             <p><span class="fw-bolder">Country:</span><%=order.deliveryAddress.country%></p>
                          </div>
                        </div>
                      </div>
                      <% order.items.forEach((item)=>{ %>
                      <div class="card shadow-0 border mb-4">
                        <div class="card-body">
                          <div class="row">
                            <div class="col-md-2">
                              <img src="/public/uploads/<%= item.image %>"
                                class="img-fluid" alt="Phone">
                            </div>
                            <div class="col-md-4 text-center d-flex justify-content-center align-items-center">
                              <p class="text-muted mb-0"><%= item.productName %></p>
                            </div>
                           
                        
                            <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                              <p class="text-muted mb-0 small">Qty: <%= item.quantity  %></p>
                            </div>
                            <div class="col-md-2 text-center d-flex justify-content-center align-items-center">
                              <p class="text-muted mb-0 small">â‚¹ <%= item.price  %></p>
                            </div>
                          </div>
                          <hr class="mb-4" style="background-color: #e0e0e0; opacity: 1;">
                          <div class="row d-flex align-items-center">
                            <div class="col-md-2">
                             
                            </div>
                            <% if(item.orderStatus==="pending"){%>
                            <div class="col-md-10">
                              <% if ( order.paymentStatus==true){ %>
                                <div class="progress" style="height: 6px; border-radius: 16px;">
                                  <div class="progress-bar" role="progressbar"
                                    style="width: 65%; border-radius: 16px; background-color: #a8729a;" aria-valuenow="65"
                                    aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <div class="d-flex justify-content-around mb-1">
                                  <p class="text-muted mt-1 mb-0 small ms-xl-5">Out for delivary</p>
                                  <p class="text-muted mt-1 mb-0 small ms-xl-5">Delivered</p>
                                </div>
                              </div>
                                <% }else{ %>
                                <div class="col-md-10">
                                  <div class="progress" style="height: 6px; border-radius: 16px;">
                                    <div class="progress-bar" role="progressbar"
                                      style="width: 2%; border-radius: 16px; background-color: #a8729a;" aria-valuenow="1"
                                      aria-valuemin="0" aria-valuemax="100">
                                    </div>
                                  </div>
                                  <div class="d-flex justify-content-between mb-1">
                                    <p class="text-muted mt-1 mb-0 small" style="text-align: left;">pending</p>
                                    <p class="text-muted mt-1 mb-0 small" style="text-align: right;">Delivered</p>
                                  </div>
                                </div>
                            <% }}  %>
                            <% if(item.orderStatus==="delivered"){%>
                              
                                <div class="col-md-10">
                                  
                                  <div class="progress" style="height: 6px; border-radius: 16px;">
                                    <div class="progress-bar" role="progressbar"
                                      style="width: 100%; border-radius: 16px; background-color: #5bfa17;" aria-valuenow="100"
                                      aria-valuemin="0" aria-valuemax="100"></div>
                                  </div>
                                  <div class="d-flex justify-content-around mb-1">
                                   
                                    <p class="text-muted mt-1 mb-0 small ms-xl-5">Delivered</p>
                                  </div>
                                </div>
                                <% }  %>
                                <% if(item.orderStatus==="canceled"){%>
                                    <div class="col-md-10">
                                      <div class="progress" style="height: 6px; border-radius: 16px;">
                                        <div class="progress-bar" role="progressbar"
                                          style="width: 100%; border-radius: 16px; background-color: #f03c20;" aria-valuenow="100"
                                          aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                      </div>
                                      <div class="d-flex justify-content-around mb-1">
                                     
                                        <p class="text-muted mt-1 mb-0 small ms-xl-5">Cancelled</p>
                                      </div>
                                    </div>
                                    <% }  %>
                                    <% if(item.orderStatus==="returned"){%>
                                      <div class="col-md-10">
                                        <div class="progress" style="height: 6px; border-radius: 16px;">
                                          <div class="progress-bar" role="progressbar"
                                            style="width: 100%; border-radius: 16px; background-color: #f03c20;" aria-valuenow="100"
                                            aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <div class="d-flex justify-content-around mb-1">
                                       
                                          <p class="text-muted mt-1 mb-0 small ms-xl-5">Returned</p>
                                        </div>
                                      </div>
                                      
                                      <% }  %>
                            
                                      <% if (item.orderStatus==="pending" && order.paymentStatus==true || item.orderStatus==="pending" && order.paymentMethod=="COD" ){ %>
                                        <span class="status-badge badge-shipping " id="status">Pending</span>
                                        <td>
                                            <button class="btn btn-danger" type="button" onclick="cancel(`<%=item.product_Id%>`,'<%=order.user_Id._id%>','<%=order._id%>')">cancel</button>
                                            <button class="btn btn-success mt-1" type="button" onclick="delivery(`<%=item.product_Id%>`,'<%=order.user_Id._id%>','<%=order._id%>')">delivery</button>
                                        </td>
                                    <% } else if(item.orderStatus ==='delivered') { %>
                                       
                                        <% if(item.returnStatus=="requested" && item.returnStatus!=="rejected"){ %>
                                        <td>
                                            <button class="btn btn-info" style="background-color: blue; color: white;" data-bs-toggle="modal" data-bs-target="#returnModal" onclick="openReturnModal('<%= item.product_Id %>', '<%= order.user_Id._id %>', '<%= order._id %>', '<%= item.returnReason %>')">Return Requested</button>
                                        </td>
                                            <% } %>
                                   
                                    <% } else if(item.orderStatus ==='canceled') { %>
                                        <span class="status-badge badge-canceled" id="status" >Cancelled</span>
                                    <%   } else if(item.orderStatus ==='returned') { %>
                                        <span class="status-badge badge-canceled" id="status" >Returned</span>
                                    <% }  %>
    
                                  
                          </div>
                        </div>
                      </div>
                      
                      <%  }) %>
                        
                   
                     
          
                      <div class="d-flex justify-content-between pt-2">
                     
                        <p class="fw-bold mb-0">Order Details</p>
                        <p class="text-muted mb-0"><span class="fw-bold me-4">Total</span> â‚¹<%= Number(order.totalAmount).toFixed(2) %></p>
                      </div>
          
                      <div class="d-flex justify-content-between pt-2">
                        <p class="text-muted mb-0">Payment Method : <%= order.paymentMethod %></p>
                        <p class="text-muted mb-0"><span class="fw-bold me-4">Discount</span>â‚¹<%=  order.discount? order.totalAmount*order.discount/100:order.discountAmount %></p>
                      </div>
          
                      <div class="d-flex justify-content-between">
                        <p class="text-muted mb-0">Status : <%= order.paymentStatus==true? "Paid":"Pending" %></p>
                        
                      </div>
          
                      <div class="d-flex justify-content-between mb-5">
                        <p class="text-muted mb-0">Ordered Date :<%= new Date(order.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></p>
                        <p class="text-muted mb-0"><span class="fw-bold me-4">Delivery Charges</span> Free</p>
                      </div>
                    </div>
                    <div class="card-footer border-0 px-4 py-5"
                      style="background-color: #ba9524; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
                      <h5 class="d-flex align-items-center justify-content-end text-white text-uppercase mb-0">Total
                        paid: <span class="h2 mb-0 ms-2">â‚¹ <%= Number(order.payableAmount).toFixed(2) %></span></h5>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
          </div>
          </div>
          </div>
         
     
          <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="returnModalLabel">Return Request</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <p><strong>Reason for return:</strong></p>
                  <p id="returnReason"></p>
                  <input type="hidden" id="product_Id">
                  <input type="hidden" id="user_Id">
                  <input type="hidden" id="order_Id">
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-danger" onclick="rejectReturn()">Reject</button>
                  <button type="button" class="btn btn-success" onclick="approveReturn()">Approve</button>
                </div>
              </div>
            </div>
          </div>
          <script>
            function openReturnModal(product_Id, user_Id, order_Id, returnReason) {
            document.getElementById('product_Id').value = product_Id;
            document.getElementById('user_Id').value = user_Id;
            document.getElementById('order_Id').value = order_Id;
            console.log(product_Id, user_Id, order_Id, returnReason)
            document.getElementById('returnReason').innerText = returnReason;
        }
        
        async function rejectReturn() {
            const product_Id = document.getElementById('product_Id').value;
            const user_Id = document.getElementById('user_Id').value;
            const order_Id = document.getElementById('order_Id').value;
        
            try {
                let response = await fetch(`/admin/orders/rejectReturn`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ product_Id, order_Id })
                });
        
                if (response.ok) {
                    Swal.fire('Rejected', 'Return has been rejected.', 'success');
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error('Failed to reject the return.');
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong. Please try again later.', 'error');
            }
        }
        
        async function approveReturn() {

            const product_Id = document.getElementById('product_Id').value;
            const user_Id = document.getElementById('user_Id').value;
            const order_Id = document.getElementById('order_Id').value;
        
            try {
                let response = await fetch(`/admin/orders/approveReturn`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ product_Id, order_Id,user_Id })
                });
        
                if (response.ok) {
                    Swal.fire('Approved', 'Return has been approved.', 'success');
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    throw new Error('Failed to approve the return.');
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong. Please try again later.', 'error');
            }
        }
            function delivery(product_Id, user_Id, order_Id) {
           console.log(product_Id, user_Id, order_Id)
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to mark this order as delivered?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, mark as delivered!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        let response = await fetch(`/admin/orders/deliver`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ product_Id, user_Id, order_Id })
                        });
        
                        if (response.ok) {
                            Swal.fire(
                                'Delivered!',
                                'The order has been marked as delivered.',
                                'success'
                            );
                            
                            setTimeout(() => {
                                window.location.reload();
                            }, 1500);
                        } else {
                            throw new Error('Failed to update the order status.');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                       
                        Swal.fire(
                            'Error!',
                            'Something went wrong. Please try again later.',
                            'error'
                        );
                    }
                }
            });
        }
        
            function cancel(product_Id, user_Id, order_Id) {
         
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to cancel this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        let response = await fetch(`/admin/orders/cancel`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ product_Id, user_Id, order_Id }) 
                        });
        
                        if (response.ok) {
                            Swal.fire(
                                'Cancelled!',
                                'Order has been canceled.',
                                'success'
                            );
        
                            setTimeout(() => {
                                window.location.reload();
                            }, 1500);
                        } else {
                            throw new Error('Failed to cancel the order.');
                        }
                    } catch (error) {
                        console.error('Error:', error);
        
                        Swal.fire(
                            'Error!',
                            'Something went wrong. Please try again later.',
                            'error'
                        );
                    }
                }
            });
        }
        
           </script>
       <%- include('../partials/admin-footer.ejs') %>